name: Sync Repo

on:
  workflow_dispatch:
  schedule:
    - cron: '38 */12 * * *'

jobs:
  sync:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      actions: write  # needed to dispatch another workflow
    steps:
      - name: Checkout YOUR repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: main
          repository: ivancarlosti/minifluxreader
          clean: true
          persist-credentials: true

      - name: Reset Git remote
        run: |
          git remote remove origin || true
          git remote add origin https://github.com/ivancarlosti/minifluxreader.git
          git remote -v

      - name: Download ReactFlux content
        run: |
          # Create temp folder OUTSIDE repository
          mkdir -p /tmp/reactflux_temp
          cd /tmp/reactflux_temp
          git clone --branch gh-pages --depth 1 https://github.com/electh/ReactFlux.git
          echo "= Copying files ="
          rsync -av \
            --exclude='.github' \
            --exclude='.git' \
            --exclude='favicon.ico' \
            ReactFlux/ "$GITHUB_WORKSPACE/"
          echo "= Files copied to repository ="
          ls -la "$GITHUB_WORKSPACE"

      - name: Cleanup temp files
        run: |
          echo "= Cleaning up ="
          rm -rf /tmp/reactflux_temp
          echo "Temp folder contents:"
          ls -la /tmp/reactflux_temp 2>/dev/null || echo "Temp folder removed"

      - name: Commit changes (skip if only manifest.json changed)
        id: commit_step
        run: |
          cd "$GITHUB_WORKSPACE"
          git config --global user.email "ivan@ivancarlos.com.br"
          git config --global user.name "ivancarlosti"
          git add .

          changes=$(git status --porcelain)

          # Build list of changed file paths safely (handles empty list)
          changed_files=$(echo "$changes" | awk '{print $2}' | grep . || true)
          changed_count=$(printf "%s\n" "$changed_files" | sed '/^$/d' | wc -l | tr -d ' ')

          # Determine if only manifest.json changed
          only_manifest_changed=false
          if [ -n "$changed_files" ] && [ "$changed_count" -eq 1 ] && [ "$changed_files" = "manifest.json" ]; then
            only_manifest_changed=true
          fi

          if [ -z "$changes" ]; then
            echo "No changes to commit"
            echo "changes_committed=false" >> $GITHUB_OUTPUT
            exit 0
          elif [ "$only_manifest_changed" = true ]; then
            echo "Only manifest.json changed, skipping commit"
            echo "changes_committed=false" >> $GITHUB_OUTPUT
            exit 0
          else
            if git commit -m "Sync ReactFlux content [▶️]"; then
              echo "= Commit details ="
              git show --stat
              # Push here so we only dispatch if push succeeded
              git push https://${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}@github.com/ivancarlosti/minifluxreader.git HEAD:main
              echo "= Push successful ="
              echo "changes_committed=true" >> $GITHUB_OUTPUT
            else
              echo "Commit failed (possibly no changes)"
              echo "changes_committed=false" >> $GITHUB_OUTPUT
              exit 0
            fi
          fi
